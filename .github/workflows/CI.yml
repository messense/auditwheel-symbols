name: CI

on:
  push:
  pull_request:

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64-apple-darwin
          args: --release --out dist
      - name: Install built wheel - x86_64
        run: |
          pip install auditwheel-symbols --no-index --find-links dist --force-reinstall
          auditwheel-symbols --help
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist --no-sdist
      - name: Install built wheel - universal2
        run: |
          pip install auditwheel-symbols --no-index --find-links dist --force-reinstall
          auditwheel-symbols --help
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
      - name: Archive binary
        run: |
          cd target/release
          tar czvf auditwheel-symbols.tar.gz auditwheel-symbols
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: auditwheel-symbols-apple-darwin.tar.gz
          file: target/release/auditwheel-symbols.tar.gz
          tag: ${{ github.ref }}

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [
          { python-architecture: "x64", target: "x86_64-pc-windows-msvc" },
          { python-architecture: "x86", target: "i686-pc-windows-msvc" },
        ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.6
          architecture: ${{ matrix.platform.python-architecture }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          profile: minimal
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --no-sdist
      - name: Install built wheel
        run: |
          pip install auditwheel-symbols --no-index --find-links dist --force-reinstall
          auditwheel-symbols --help
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl" },
          { target: "i686-unknown-linux-musl", image_tag: "i686-musl" },
          { target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl" },
          { target: "armv7-unknown-linux-musleabihf", image_tag: "armv7-musleabihf" },
          { target: "powerpc64le-unknown-linux-musl", image_tag: "powerpc64le-musl" },
        ]
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v2
      - name: Build Wheels
        uses: messense/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          container: off
          args: --no-sdist --release -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
      - name: Archive binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf auditwheel-symbols.tar.gz auditwheel-symbols
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: auditwheel-symbols-${{ matrix.platform.target }}.tar.gz
          file: target/${{ matrix.platform.target }}/release/auditwheel-symbols.tar.gz
          tag: ${{ github.ref }}

  audit:
    name: Auditwheel Symbols
    runs-on: ubuntu-latest
    needs: [ linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install auditwheel-symbols
        run: pip install auditwheel-symbols --no-index --find-links . --force-reinstall
      - name: Run auditwheel-symbols
        run: |
          for wheel in *manylinux*.whl; do
            echo "Processing $wheel"
            auditwheel-symbols "$wheel"
          done

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ audit, macos, windows ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
